{
    "contents" : "# Reproducible Research, Peer Assessment 1\n==========================================\n### By,Ismael González Flores\n=============================\n\n\nLoading [data](https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip) and libraies needed.\n\n```{r}\ndata<- read.csv(\"activity.csv\", header=TRUE, colClasses=c(\"numeric\", \"Date\", \"numeric\"))\nlibrary(plyr)\nlibrary(lattice)\nhead(data)\n```\n## What is mean total number of steps taken per day?\n====================================================\n\nFor this part of the assignment, you can ignore the missing values in the dataset.\n\n```{r}\ntidy<- data.frame(subset(data, complete.cases(data)), row.names=NULL)\n```\n\n\n### 1. Make a histogram of the total number of steps taken each day\nWe separate de data in days and add all the steps taken each day\n\n```{r}\ntidy.sum<- data.frame(as.Date(unique(tidy$date)), \n                      tapply(tidy$steps, tidy$date, sum),\n                      row.names=NULL)\nnames(tidy.sum)<- c(\"Date\", \"Sum.Steps\")\nhead(tidy.sum)\n```\nAnd now we plot the Hitogram of the total number of steps taken each day.\n\n*Note: The x axis of the Histogram has ten levels of steps*\n```{r}\nhist1<-hist(tidy.sum$Sum.Steps, col=\"blue\",\n     main=\"Histogram of the total number of steps taken each day\",\n     xlab = \"Number of Steps\", breaks=10)\n```\n\n\n### 2. Calculate and report the mean and median total number of steps taken per day\n\nHere is the code to calculate the mean and the median of the total number of steps \ntaken per day.\n\n```{r}\nmean.steps<- round(mean(tidy.sum$Sum.Steps), digits=2)\nmedian.steps<- median(tidy.sum$Sum.Steps)\n```\n\nThe mean number of setps is **`r as.character(mean.steps)`** and the median is **`r as.character(median.steps)`**.\n\n## What is the average daily activity pattern?\n==============================================\n\n### 1. Make a time series plot (i.e. type = \"l\") of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all days (y-axis)\n\nFirst we create a data with the average steps taken per interval across all days.\n\n```{r}\ntidy.interval<- ddply(tidy, ~interval, summarise, Mean.Steps=mean(steps))\n```\n\nNow we make the plot\n\n```{r}\nplot(tidy.interval$interval, tidy.interval$Mean.Steps, \n     col=\"blue\", type=\"l\", main= \"Average Steps taken per 5 min interval\",\n     xlab= \"5 in interval\", ylab=\"Mean number os steps\")\n```\n\n\n### 2. Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?\n\nFirst we obtain the max value of average steps and then we sear the corresponding interval.\n```{r}\nmax.steps<-max(tidy.interval$Mean.Steps)\nmax.interval<- tidy.interval[tidy.interval$Mean.Steps==max.steps, 1]\n```\nThe 5 min interval with the maximun average number of steps is the interval: **`r max.interval`**.\n\n## Imputing missing values\n==========================\n\nNote that there are a number of days/intervals where there are missing values (coded as NA). The presence of missing days may introduce bias into some calculations or summaries of the data.\n\n### 1. Calculate and report the total number of missing values in the dataset (i.e. the total number of rows with NAs)\n\nHere is the code to obtain the total number of missing values(NA) in the data.\n\n```{r}\nmissing<- nrow(data)-nrow(tidy)\n```\nThe total number of missing values are: **`r missing`**.\n\n### 2.Devise a strategy for filling in all of the missing values in the dataset. The strategy does not need to be sophisticated. For example, you could use the mean/median for that day, or the mean for that 5-minute interval, etc.\n\nMy strategy consists in filling the missing values with the average steps taken in the corresponding interval across all days.\n\n```{r}\nfill.data <- data\nfill.data$steps <- mapply(function(steps, interval) \n        if (is.na(steps)) \n                tidy.interval[tidy.interval$interval == interval, 2]\n        else\n                steps, fill.data$steps, fill.data$interval)\nhead(fill.data)\n```\n\n### 3. Create a new dataset that is equal to the original dataset but with the missing data filled in.\n\nThe data was already created in the code above.\n\n### 4. Make a histogram of the total number of steps taken each day and Calculate and report the mean and median total number of steps taken per day. Do these values differ from the estimates from the first part of the assignment? What is the impact of imputing missing data on the estimates of the total daily number of steps?\n\nHistogram with the filled data\n```{r}\nfill.sum<- data.frame(as.Date(unique(fill.data$date)), \n                      tapply(fill.data$steps, fill.data$date, sum),\n                      row.names=NULL)\nnames(fill.sum)<- c(\"Date\", \"Sum.Steps\")\nhead(fill.sum)\n\nhist2<- hist(fill.sum$Sum.Steps, col=\"red\",\n     main=\"Histogram of the total number of steps taken each day (NA values filled)\",\n     xlab = \"Number of Steps\", breaks=10)\n```\n\nNow we recalculated the mean and median values of steps with the filled data.\n\n```{r}\nfill.mean.steps<- round(mean(fill.sum$Sum.Steps), digits=4)\nfill.median.steps<- round(median(fill.sum$Sum.Steps), digits=4)\n```\nThe mean number of setps is **`r as.character(fill.mean.steps)`** and the median is **`r as.character(fill.median.steps)`**.\n\n## Are there differences in activity patterns between weekdays and weekends?\n============================================================================\n\nFor this part the weekdays() function may be of some help here. Use the dataset with the filled-in missing values for this part.\n```{r}\ndays<- weekdays(as.Date(fill.data$date))\nfill.data$Wday<-days\n```\n\n### 1. Create a new factor variable in the dataset with two levels – “weekday” and “weekend” indicating whether a given date is a weekday or weekend day.\n\n```{r}\nfill.data$wd<- ifelse(fill.data$Wday==c(\"Sunday\", \"Saturday\"), \"Weekend\", \"Weekday\")\n```\n\n### 2. Make a panel plot containing a time series plot (i.e. type = \"l\") of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all weekday days or weekend days (y-axis). \n\nFirst we separate the data into interval, weekday or weekend and ad a column of the mean steps.\n```{r}\nSteps.wd<-ddply(fill.data, .(interval, wd), summarise, Mean.Steps=mean(steps))\n```\n\nAnd now we do the plot:\n\n```{r}\nxyplot(Mean.Steps~interval|wd,\n       data= Steps.wd, layout=c(1,2),type=\"l\", \n       xlab= \"5 min interval\", ylab=\"Average number of steps\")\n```\n\n\n",
    "created" : 1409612148872.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "822244876",
    "id" : "3A1EDA25",
    "lastKnownWriteTime" : 1405895682,
    "path" : "~/Desktop/Coursera/Data Certification/5_Reproducible Research/Week2/RepData_PeerAssessment1/PA1_template.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}